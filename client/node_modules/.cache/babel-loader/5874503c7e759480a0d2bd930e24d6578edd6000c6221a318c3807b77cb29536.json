{"ast":null,"code":"const LuminosityShader = {\n  uniforms: {\n    tDiffuse: {\n      value: null\n    }\n  },\n  vertexShader: (/* glsl */\n  `\n    varying vec2 vUv;\n\n    void main() {\n\n    \tvUv = uv;\n\n    \tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n\n    }\n  `),\n  fragmentShader: (/* glsl */\n  `\n    #include <common>\n\n    uniform sampler2D tDiffuse;\n\n    varying vec2 vUv;\n\n    void main() {\n\n    \tvec4 texel = texture2D( tDiffuse, vUv );\n\n    \tfloat l = linearToRelativeLuminance( texel.rgb );\n\n    \tgl_FragColor = vec4( l, l, l, texel.w );\n\n    }\n  `)\n};\nexport { LuminosityShader };","map":{"version":3,"names":["LuminosityShader","uniforms","tDiffuse","value","vertexShader","fragmentShader"],"sources":["C:/Users/Marcelo/OneDrive/Documents/Desktop/e-traffic system/client/node_modules/three-stdlib/shaders/LuminosityShader.js"],"sourcesContent":["const LuminosityShader = {\n  uniforms: {\n    tDiffuse: { value: null }\n  },\n  vertexShader: (\n    /* glsl */\n    `\n    varying vec2 vUv;\n\n    void main() {\n\n    \tvUv = uv;\n\n    \tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n\n    }\n  `\n  ),\n  fragmentShader: (\n    /* glsl */\n    `\n    #include <common>\n\n    uniform sampler2D tDiffuse;\n\n    varying vec2 vUv;\n\n    void main() {\n\n    \tvec4 texel = texture2D( tDiffuse, vUv );\n\n    \tfloat l = linearToRelativeLuminance( texel.rgb );\n\n    \tgl_FragColor = vec4( l, l, l, texel.w );\n\n    }\n  `\n  )\n};\nexport {\n  LuminosityShader\n};\n//# sourceMappingURL=LuminosityShader.js.map\n"],"mappings":"AAAA,MAAMA,gBAAgB,GAAG;EACvBC,QAAQ,EAAE;IACRC,QAAQ,EAAE;MAAEC,KAAK,EAAE;IAAK;EAC1B,CAAC;EACDC,YAAY,GACV;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG,CACA;EACDC,cAAc,GACZ;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AAEH,CAAC;AACD,SACEL,gBAAgB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}