{"ast":null,"code":"var __defProp = Object.defineProperty;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  value\n}) : obj[key] = value;\nvar __publicField = (obj, key, value) => {\n  __defNormalProp(obj, typeof key !== \"symbol\" ? key + \"\" : key, value);\n  return value;\n};\nimport { Vector3, MOUSE, TOUCH, Quaternion, PerspectiveCamera, OrthographicCamera, Spherical, Vector2, Ray, Plane } from \"three\";\nimport { EventDispatcher } from \"./EventDispatcher.js\";\nconst _ray = /* @__PURE__ */new Ray();\nconst _plane = /* @__PURE__ */new Plane();\nconst TILT_LIMIT = Math.cos(70 * (Math.PI / 180));\nconst moduloWrapAround = (offset, capacity) => (offset % capacity + capacity) % capacity;\nclass OrbitControls extends EventDispatcher {\n  constructor(object, domElement) {\n    super();\n    __publicField(this, \"object\");\n    __publicField(this, \"domElement\");\n    // Set to false to disable this control\n    __publicField(this, \"enabled\", true);\n    // \"target\" sets the location of focus, where the object orbits around\n    __publicField(this, \"target\", new Vector3());\n    // How far you can dolly in and out ( PerspectiveCamera only )\n    __publicField(this, \"minDistance\", 0);\n    __publicField(this, \"maxDistance\", Infinity);\n    // How far you can zoom in and out ( OrthographicCamera only )\n    __publicField(this, \"minZoom\", 0);\n    __publicField(this, \"maxZoom\", Infinity);\n    // How far you can orbit vertically, upper and lower limits.\n    // Range is 0 to Math.PI radians.\n    __publicField(this, \"minPolarAngle\", 0);\n    // radians\n    __publicField(this, \"maxPolarAngle\", Math.PI);\n    // radians\n    // How far you can orbit horizontally, upper and lower limits.\n    // If set, the interval [ min, max ] must be a sub-interval of [ - 2 PI, 2 PI ], with ( max - min < 2 PI )\n    __publicField(this, \"minAzimuthAngle\", -Infinity);\n    // radians\n    __publicField(this, \"maxAzimuthAngle\", Infinity);\n    // radians\n    // Set to true to enable damping (inertia)\n    // If damping is enabled, you must call controls.update() in your animation loop\n    __publicField(this, \"enableDamping\", false);\n    __publicField(this, \"dampingFactor\", 0.05);\n    // This option actually enables dollying in and out; left as \"zoom\" for backwards compatibility.\n    // Set to false to disable zooming\n    __publicField(this, \"enableZoom\", true);\n    __publicField(this, \"zoomSpeed\", 1);\n    // Set to false to disable rotating\n    __publicField(this, \"enableRotate\", true);\n    __publicField(this, \"rotateSpeed\", 1);\n    // Set to false to disable panning\n    __publicField(this, \"enablePan\", true);\n    __publicField(this, \"panSpeed\", 1);\n    __publicField(this, \"screenSpacePanning\", true);\n    // if false, pan orthogonal to world-space direction camera.up\n    __publicField(this, \"keyPanSpeed\", 7);\n    // pixels moved per arrow key push\n    __publicField(this, \"zoomToCursor\", false);\n    // Set to true to automatically rotate around the target\n    // If auto-rotate is enabled, you must call controls.update() in your animation loop\n    __publicField(this, \"autoRotate\", false);\n    __publicField(this, \"autoRotateSpeed\", 2);\n    // 30 seconds per orbit when fps is 60\n    __publicField(this, \"reverseOrbit\", false);\n    // true if you want to reverse the orbit to mouse drag from left to right = orbits left\n    __publicField(this, \"reverseHorizontalOrbit\", false);\n    // true if you want to reverse the horizontal orbit direction\n    __publicField(this, \"reverseVerticalOrbit\", false);\n    // true if you want to reverse the vertical orbit direction\n    // The four arrow keys\n    __publicField(this, \"keys\", {\n      LEFT: \"ArrowLeft\",\n      UP: \"ArrowUp\",\n      RIGHT: \"ArrowRight\",\n      BOTTOM: \"ArrowDown\"\n    });\n    // Mouse buttons\n    __publicField(this, \"mouseButtons\", {\n      LEFT: MOUSE.ROTATE,\n      MIDDLE: MOUSE.DOLLY,\n      RIGHT: MOUSE.PAN\n    });\n    // Touch fingers\n    __publicField(this, \"touches\", {\n      ONE: TOUCH.ROTATE,\n      TWO: TOUCH.DOLLY_PAN\n    });\n    __publicField(this, \"target0\");\n    __publicField(this, \"position0\");\n    __publicField(this, \"zoom0\");\n    // the target DOM element for key events\n    __publicField(this, \"_domElementKeyEvents\", null);\n    __publicField(this, \"getPolarAngle\");\n    __publicField(this, \"getAzimuthalAngle\");\n    __publicField(this, \"setPolarAngle\");\n    __publicField(this, \"setAzimuthalAngle\");\n    __publicField(this, \"getDistance\");\n    // Not used in most scenarios, however they can be useful for specific use cases\n    __publicField(this, \"getZoomScale\");\n    __publicField(this, \"listenToKeyEvents\");\n    __publicField(this, \"stopListenToKeyEvents\");\n    __publicField(this, \"saveState\");\n    __publicField(this, \"reset\");\n    __publicField(this, \"update\");\n    __publicField(this, \"connect\");\n    __publicField(this, \"dispose\");\n    // Dolly in programmatically\n    __publicField(this, \"dollyIn\");\n    // Dolly out programmatically\n    __publicField(this, \"dollyOut\");\n    // Get the current scale\n    __publicField(this, \"getScale\");\n    // Set the current scale (these are not used in most scenarios, however they can be useful for specific use cases)\n    __publicField(this, \"setScale\");\n    this.object = object;\n    this.domElement = domElement;\n    this.target0 = this.target.clone();\n    this.position0 = this.object.position.clone();\n    this.zoom0 = this.object.zoom;\n    this.getPolarAngle = () => spherical.phi;\n    this.getAzimuthalAngle = () => spherical.theta;\n    this.setPolarAngle = value => {\n      let phi = moduloWrapAround(value, 2 * Math.PI);\n      let currentPhi = spherical.phi;\n      if (currentPhi < 0) currentPhi += 2 * Math.PI;\n      if (phi < 0) phi += 2 * Math.PI;\n      let phiDist = Math.abs(phi - currentPhi);\n      if (2 * Math.PI - phiDist < phiDist) {\n        if (phi < currentPhi) {\n          phi += 2 * Math.PI;\n        } else {\n          currentPhi += 2 * Math.PI;\n        }\n      }\n      sphericalDelta.phi = phi - currentPhi;\n      scope.update();\n    };\n    this.setAzimuthalAngle = value => {\n      let theta = moduloWrapAround(value, 2 * Math.PI);\n      let currentTheta = spherical.theta;\n      if (currentTheta < 0) currentTheta += 2 * Math.PI;\n      if (theta < 0) theta += 2 * Math.PI;\n      let thetaDist = Math.abs(theta - currentTheta);\n      if (2 * Math.PI - thetaDist < thetaDist) {\n        if (theta < currentTheta) {\n          theta += 2 * Math.PI;\n        } else {\n          currentTheta += 2 * Math.PI;\n        }\n      }\n      sphericalDelta.theta = theta - currentTheta;\n      scope.update();\n    };\n    this.getDistance = () => scope.object.position.distanceTo(scope.target);\n    this.listenToKeyEvents = domElement2 => {\n      domElement2.addEventListener(\"keydown\", onKeyDown);\n      this._domElementKeyEvents = domElement2;\n    };\n    this.stopListenToKeyEvents = () => {\n      this._domElementKeyEvents.removeEventListener(\"keydown\", onKeyDown);\n      this._domElementKeyEvents = null;\n    };\n    this.saveState = () => {\n      scope.target0.copy(scope.target);\n      scope.position0.copy(scope.object.position);\n      scope.zoom0 = scope.object.zoom;\n    };\n    this.reset = () => {\n      scope.target.copy(scope.target0);\n      scope.object.position.copy(scope.position0);\n      scope.object.zoom = scope.zoom0;\n      scope.object.updateProjectionMatrix();\n      scope.dispatchEvent(changeEvent);\n      scope.update();\n      state = STATE.NONE;\n    };\n    this.update = (() => {\n      const offset = new Vector3();\n      const up = new Vector3(0, 1, 0);\n      const quat = new Quaternion().setFromUnitVectors(object.up, up);\n      const quatInverse = quat.clone().invert();\n      const lastPosition = new Vector3();\n      const lastQuaternion = new Quaternion();\n      const twoPI = 2 * Math.PI;\n      return function update() {\n        const position = scope.object.position;\n        quat.setFromUnitVectors(object.up, up);\n        quatInverse.copy(quat).invert();\n        offset.copy(position).sub(scope.target);\n        offset.applyQuaternion(quat);\n        spherical.setFromVector3(offset);\n        if (scope.autoRotate && state === STATE.NONE) {\n          rotateLeft(getAutoRotationAngle());\n        }\n        if (scope.enableDamping) {\n          spherical.theta += sphericalDelta.theta * scope.dampingFactor;\n          spherical.phi += sphericalDelta.phi * scope.dampingFactor;\n        } else {\n          spherical.theta += sphericalDelta.theta;\n          spherical.phi += sphericalDelta.phi;\n        }\n        let min = scope.minAzimuthAngle;\n        let max = scope.maxAzimuthAngle;\n        if (isFinite(min) && isFinite(max)) {\n          if (min < -Math.PI) min += twoPI;else if (min > Math.PI) min -= twoPI;\n          if (max < -Math.PI) max += twoPI;else if (max > Math.PI) max -= twoPI;\n          if (min <= max) {\n            spherical.theta = Math.max(min, Math.min(max, spherical.theta));\n          } else {\n            spherical.theta = spherical.theta > (min + max) / 2 ? Math.max(min, spherical.theta) : Math.min(max, spherical.theta);\n          }\n        }\n        spherical.phi = Math.max(scope.minPolarAngle, Math.min(scope.maxPolarAngle, spherical.phi));\n        spherical.makeSafe();\n        if (scope.enableDamping === true) {\n          scope.target.addScaledVector(panOffset, scope.dampingFactor);\n        } else {\n          scope.target.add(panOffset);\n        }\n        if (scope.zoomToCursor && performCursorZoom || scope.object.isOrthographicCamera) {\n          spherical.radius = clampDistance(spherical.radius);\n        } else {\n          spherical.radius = clampDistance(spherical.radius * scale);\n        }\n        offset.setFromSpherical(spherical);\n        offset.applyQuaternion(quatInverse);\n        position.copy(scope.target).add(offset);\n        if (!scope.object.matrixAutoUpdate) scope.object.updateMatrix();\n        scope.object.lookAt(scope.target);\n        if (scope.enableDamping === true) {\n          sphericalDelta.theta *= 1 - scope.dampingFactor;\n          sphericalDelta.phi *= 1 - scope.dampingFactor;\n          panOffset.multiplyScalar(1 - scope.dampingFactor);\n        } else {\n          sphericalDelta.set(0, 0, 0);\n          panOffset.set(0, 0, 0);\n        }\n        let zoomChanged = false;\n        if (scope.zoomToCursor && performCursorZoom) {\n          let newRadius = null;\n          if (scope.object instanceof PerspectiveCamera && scope.object.isPerspectiveCamera) {\n            const prevRadius = offset.length();\n            newRadius = clampDistance(prevRadius * scale);\n            const radiusDelta = prevRadius - newRadius;\n            scope.object.position.addScaledVector(dollyDirection, radiusDelta);\n            scope.object.updateMatrixWorld();\n          } else if (scope.object.isOrthographicCamera) {\n            const mouseBefore = new Vector3(mouse.x, mouse.y, 0);\n            mouseBefore.unproject(scope.object);\n            scope.object.zoom = Math.max(scope.minZoom, Math.min(scope.maxZoom, scope.object.zoom / scale));\n            scope.object.updateProjectionMatrix();\n            zoomChanged = true;\n            const mouseAfter = new Vector3(mouse.x, mouse.y, 0);\n            mouseAfter.unproject(scope.object);\n            scope.object.position.sub(mouseAfter).add(mouseBefore);\n            scope.object.updateMatrixWorld();\n            newRadius = offset.length();\n          } else {\n            console.warn(\"WARNING: OrbitControls.js encountered an unknown camera type - zoom to cursor disabled.\");\n            scope.zoomToCursor = false;\n          }\n          if (newRadius !== null) {\n            if (scope.screenSpacePanning) {\n              scope.target.set(0, 0, -1).transformDirection(scope.object.matrix).multiplyScalar(newRadius).add(scope.object.position);\n            } else {\n              _ray.origin.copy(scope.object.position);\n              _ray.direction.set(0, 0, -1).transformDirection(scope.object.matrix);\n              if (Math.abs(scope.object.up.dot(_ray.direction)) < TILT_LIMIT) {\n                object.lookAt(scope.target);\n              } else {\n                _plane.setFromNormalAndCoplanarPoint(scope.object.up, scope.target);\n                _ray.intersectPlane(_plane, scope.target);\n              }\n            }\n          }\n        } else if (scope.object instanceof OrthographicCamera && scope.object.isOrthographicCamera) {\n          zoomChanged = scale !== 1;\n          if (zoomChanged) {\n            scope.object.zoom = Math.max(scope.minZoom, Math.min(scope.maxZoom, scope.object.zoom / scale));\n            scope.object.updateProjectionMatrix();\n          }\n        }\n        scale = 1;\n        performCursorZoom = false;\n        if (zoomChanged || lastPosition.distanceToSquared(scope.object.position) > EPS || 8 * (1 - lastQuaternion.dot(scope.object.quaternion)) > EPS) {\n          scope.dispatchEvent(changeEvent);\n          lastPosition.copy(scope.object.position);\n          lastQuaternion.copy(scope.object.quaternion);\n          zoomChanged = false;\n          return true;\n        }\n        return false;\n      };\n    })();\n    this.connect = domElement2 => {\n      scope.domElement = domElement2;\n      scope.domElement.style.touchAction = \"none\";\n      scope.domElement.addEventListener(\"contextmenu\", onContextMenu);\n      scope.domElement.addEventListener(\"pointerdown\", onPointerDown);\n      scope.domElement.addEventListener(\"pointercancel\", onPointerUp);\n      scope.domElement.addEventListener(\"wheel\", onMouseWheel);\n    };\n    this.dispose = () => {\n      var _a, _b, _c, _d, _e, _f;\n      if (scope.domElement) {\n        scope.domElement.style.touchAction = \"auto\";\n      }\n      (_a = scope.domElement) == null ? void 0 : _a.removeEventListener(\"contextmenu\", onContextMenu);\n      (_b = scope.domElement) == null ? void 0 : _b.removeEventListener(\"pointerdown\", onPointerDown);\n      (_c = scope.domElement) == null ? void 0 : _c.removeEventListener(\"pointercancel\", onPointerUp);\n      (_d = scope.domElement) == null ? void 0 : _d.removeEventListener(\"wheel\", onMouseWheel);\n      (_e = scope.domElement) == null ? void 0 : _e.ownerDocument.removeEventListener(\"pointermove\", onPointerMove);\n      (_f = scope.domElement) == null ? void 0 : _f.ownerDocument.removeEventListener(\"pointerup\", onPointerUp);\n      if (scope._domElementKeyEvents !== null) {\n        scope._domElementKeyEvents.removeEventListener(\"keydown\", onKeyDown);\n      }\n    };\n    const scope = this;\n    const changeEvent = {\n      type: \"change\"\n    };\n    const startEvent = {\n      type: \"start\"\n    };\n    const endEvent = {\n      type: \"end\"\n    };\n    const STATE = {\n      NONE: -1,\n      ROTATE: 0,\n      DOLLY: 1,\n      PAN: 2,\n      TOUCH_ROTATE: 3,\n      TOUCH_PAN: 4,\n      TOUCH_DOLLY_PAN: 5,\n      TOUCH_DOLLY_ROTATE: 6\n    };\n    let state = STATE.NONE;\n    const EPS = 1e-6;\n    const spherical = new Spherical();\n    const sphericalDelta = new Spherical();\n    let scale = 1;\n    const panOffset = new Vector3();\n    const rotateStart = new Vector2();\n    const rotateEnd = new Vector2();\n    const rotateDelta = new Vector2();\n    const panStart = new Vector2();\n    const panEnd = new Vector2();\n    const panDelta = new Vector2();\n    const dollyStart = new Vector2();\n    const dollyEnd = new Vector2();\n    const dollyDelta = new Vector2();\n    const dollyDirection = new Vector3();\n    const mouse = new Vector2();\n    let performCursorZoom = false;\n    const pointers = [];\n    const pointerPositions = {};\n    function getAutoRotationAngle() {\n      return 2 * Math.PI / 60 / 60 * scope.autoRotateSpeed;\n    }\n    function getZoomScale() {\n      return Math.pow(0.95, scope.zoomSpeed);\n    }\n    function rotateLeft(angle) {\n      if (scope.reverseOrbit || scope.reverseHorizontalOrbit) {\n        sphericalDelta.theta += angle;\n      } else {\n        sphericalDelta.theta -= angle;\n      }\n    }\n    function rotateUp(angle) {\n      if (scope.reverseOrbit || scope.reverseVerticalOrbit) {\n        sphericalDelta.phi += angle;\n      } else {\n        sphericalDelta.phi -= angle;\n      }\n    }\n    const panLeft = (() => {\n      const v = new Vector3();\n      return function panLeft2(distance, objectMatrix) {\n        v.setFromMatrixColumn(objectMatrix, 0);\n        v.multiplyScalar(-distance);\n        panOffset.add(v);\n      };\n    })();\n    const panUp = (() => {\n      const v = new Vector3();\n      return function panUp2(distance, objectMatrix) {\n        if (scope.screenSpacePanning === true) {\n          v.setFromMatrixColumn(objectMatrix, 1);\n        } else {\n          v.setFromMatrixColumn(objectMatrix, 0);\n          v.crossVectors(scope.object.up, v);\n        }\n        v.multiplyScalar(distance);\n        panOffset.add(v);\n      };\n    })();\n    const pan = (() => {\n      const offset = new Vector3();\n      return function pan2(deltaX, deltaY) {\n        const element = scope.domElement;\n        if (element && scope.object instanceof PerspectiveCamera && scope.object.isPerspectiveCamera) {\n          const position = scope.object.position;\n          offset.copy(position).sub(scope.target);\n          let targetDistance = offset.length();\n          targetDistance *= Math.tan(scope.object.fov / 2 * Math.PI / 180);\n          panLeft(2 * deltaX * targetDistance / element.clientHeight, scope.object.matrix);\n          panUp(2 * deltaY * targetDistance / element.clientHeight, scope.object.matrix);\n        } else if (element && scope.object instanceof OrthographicCamera && scope.object.isOrthographicCamera) {\n          panLeft(deltaX * (scope.object.right - scope.object.left) / scope.object.zoom / element.clientWidth, scope.object.matrix);\n          panUp(deltaY * (scope.object.top - scope.object.bottom) / scope.object.zoom / element.clientHeight, scope.object.matrix);\n        } else {\n          console.warn(\"WARNING: OrbitControls.js encountered an unknown camera type - pan disabled.\");\n          scope.enablePan = false;\n        }\n      };\n    })();\n    function setScale(newScale) {\n      if (scope.object instanceof PerspectiveCamera && scope.object.isPerspectiveCamera || scope.object instanceof OrthographicCamera && scope.object.isOrthographicCamera) {\n        scale = newScale;\n      } else {\n        console.warn(\"WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.\");\n        scope.enableZoom = false;\n      }\n    }\n    function dollyOut(dollyScale) {\n      setScale(scale / dollyScale);\n    }\n    function dollyIn(dollyScale) {\n      setScale(scale * dollyScale);\n    }\n    function updateMouseParameters(event) {\n      if (!scope.zoomToCursor || !scope.domElement) {\n        return;\n      }\n      performCursorZoom = true;\n      const rect = scope.domElement.getBoundingClientRect();\n      const x = event.clientX - rect.left;\n      const y = event.clientY - rect.top;\n      const w = rect.width;\n      const h = rect.height;\n      mouse.x = x / w * 2 - 1;\n      mouse.y = -(y / h) * 2 + 1;\n      dollyDirection.set(mouse.x, mouse.y, 1).unproject(scope.object).sub(scope.object.position).normalize();\n    }\n    function clampDistance(dist) {\n      return Math.max(scope.minDistance, Math.min(scope.maxDistance, dist));\n    }\n    function handleMouseDownRotate(event) {\n      rotateStart.set(event.clientX, event.clientY);\n    }\n    function handleMouseDownDolly(event) {\n      updateMouseParameters(event);\n      dollyStart.set(event.clientX, event.clientY);\n    }\n    function handleMouseDownPan(event) {\n      panStart.set(event.clientX, event.clientY);\n    }\n    function handleMouseMoveRotate(event) {\n      rotateEnd.set(event.clientX, event.clientY);\n      rotateDelta.subVectors(rotateEnd, rotateStart).multiplyScalar(scope.rotateSpeed);\n      const element = scope.domElement;\n      if (element) {\n        rotateLeft(2 * Math.PI * rotateDelta.x / element.clientHeight);\n        rotateUp(2 * Math.PI * rotateDelta.y / element.clientHeight);\n      }\n      rotateStart.copy(rotateEnd);\n      scope.update();\n    }\n    function handleMouseMoveDolly(event) {\n      dollyEnd.set(event.clientX, event.clientY);\n      dollyDelta.subVectors(dollyEnd, dollyStart);\n      if (dollyDelta.y > 0) {\n        dollyOut(getZoomScale());\n      } else if (dollyDelta.y < 0) {\n        dollyIn(getZoomScale());\n      }\n      dollyStart.copy(dollyEnd);\n      scope.update();\n    }\n    function handleMouseMovePan(event) {\n      panEnd.set(event.clientX, event.clientY);\n      panDelta.subVectors(panEnd, panStart).multiplyScalar(scope.panSpeed);\n      pan(panDelta.x, panDelta.y);\n      panStart.copy(panEnd);\n      scope.update();\n    }\n    function handleMouseWheel(event) {\n      updateMouseParameters(event);\n      if (event.deltaY < 0) {\n        dollyIn(getZoomScale());\n      } else if (event.deltaY > 0) {\n        dollyOut(getZoomScale());\n      }\n      scope.update();\n    }\n    function handleKeyDown(event) {\n      let needsUpdate = false;\n      switch (event.code) {\n        case scope.keys.UP:\n          pan(0, scope.keyPanSpeed);\n          needsUpdate = true;\n          break;\n        case scope.keys.BOTTOM:\n          pan(0, -scope.keyPanSpeed);\n          needsUpdate = true;\n          break;\n        case scope.keys.LEFT:\n          pan(scope.keyPanSpeed, 0);\n          needsUpdate = true;\n          break;\n        case scope.keys.RIGHT:\n          pan(-scope.keyPanSpeed, 0);\n          needsUpdate = true;\n          break;\n      }\n      if (needsUpdate) {\n        event.preventDefault();\n        scope.update();\n      }\n    }\n    function handleTouchStartRotate() {\n      if (pointers.length == 1) {\n        rotateStart.set(pointers[0].pageX, pointers[0].pageY);\n      } else {\n        const x = 0.5 * (pointers[0].pageX + pointers[1].pageX);\n        const y = 0.5 * (pointers[0].pageY + pointers[1].pageY);\n        rotateStart.set(x, y);\n      }\n    }\n    function handleTouchStartPan() {\n      if (pointers.length == 1) {\n        panStart.set(pointers[0].pageX, pointers[0].pageY);\n      } else {\n        const x = 0.5 * (pointers[0].pageX + pointers[1].pageX);\n        const y = 0.5 * (pointers[0].pageY + pointers[1].pageY);\n        panStart.set(x, y);\n      }\n    }\n    function handleTouchStartDolly() {\n      const dx = pointers[0].pageX - pointers[1].pageX;\n      const dy = pointers[0].pageY - pointers[1].pageY;\n      const distance = Math.sqrt(dx * dx + dy * dy);\n      dollyStart.set(0, distance);\n    }\n    function handleTouchStartDollyPan() {\n      if (scope.enableZoom) handleTouchStartDolly();\n      if (scope.enablePan) handleTouchStartPan();\n    }\n    function handleTouchStartDollyRotate() {\n      if (scope.enableZoom) handleTouchStartDolly();\n      if (scope.enableRotate) handleTouchStartRotate();\n    }\n    function handleTouchMoveRotate(event) {\n      if (pointers.length == 1) {\n        rotateEnd.set(event.pageX, event.pageY);\n      } else {\n        const position = getSecondPointerPosition(event);\n        const x = 0.5 * (event.pageX + position.x);\n        const y = 0.5 * (event.pageY + position.y);\n        rotateEnd.set(x, y);\n      }\n      rotateDelta.subVectors(rotateEnd, rotateStart).multiplyScalar(scope.rotateSpeed);\n      const element = scope.domElement;\n      if (element) {\n        rotateLeft(2 * Math.PI * rotateDelta.x / element.clientHeight);\n        rotateUp(2 * Math.PI * rotateDelta.y / element.clientHeight);\n      }\n      rotateStart.copy(rotateEnd);\n    }\n    function handleTouchMovePan(event) {\n      if (pointers.length == 1) {\n        panEnd.set(event.pageX, event.pageY);\n      } else {\n        const position = getSecondPointerPosition(event);\n        const x = 0.5 * (event.pageX + position.x);\n        const y = 0.5 * (event.pageY + position.y);\n        panEnd.set(x, y);\n      }\n      panDelta.subVectors(panEnd, panStart).multiplyScalar(scope.panSpeed);\n      pan(panDelta.x, panDelta.y);\n      panStart.copy(panEnd);\n    }\n    function handleTouchMoveDolly(event) {\n      const position = getSecondPointerPosition(event);\n      const dx = event.pageX - position.x;\n      const dy = event.pageY - position.y;\n      const distance = Math.sqrt(dx * dx + dy * dy);\n      dollyEnd.set(0, distance);\n      dollyDelta.set(0, Math.pow(dollyEnd.y / dollyStart.y, scope.zoomSpeed));\n      dollyOut(dollyDelta.y);\n      dollyStart.copy(dollyEnd);\n    }\n    function handleTouchMoveDollyPan(event) {\n      if (scope.enableZoom) handleTouchMoveDolly(event);\n      if (scope.enablePan) handleTouchMovePan(event);\n    }\n    function handleTouchMoveDollyRotate(event) {\n      if (scope.enableZoom) handleTouchMoveDolly(event);\n      if (scope.enableRotate) handleTouchMoveRotate(event);\n    }\n    function onPointerDown(event) {\n      var _a, _b;\n      if (scope.enabled === false) return;\n      if (pointers.length === 0) {\n        (_a = scope.domElement) == null ? void 0 : _a.ownerDocument.addEventListener(\"pointermove\", onPointerMove);\n        (_b = scope.domElement) == null ? void 0 : _b.ownerDocument.addEventListener(\"pointerup\", onPointerUp);\n      }\n      addPointer(event);\n      if (event.pointerType === \"touch\") {\n        onTouchStart(event);\n      } else {\n        onMouseDown(event);\n      }\n    }\n    function onPointerMove(event) {\n      if (scope.enabled === false) return;\n      if (event.pointerType === \"touch\") {\n        onTouchMove(event);\n      } else {\n        onMouseMove(event);\n      }\n    }\n    function onPointerUp(event) {\n      var _a, _b, _c;\n      removePointer(event);\n      if (pointers.length === 0) {\n        (_a = scope.domElement) == null ? void 0 : _a.releasePointerCapture(event.pointerId);\n        (_b = scope.domElement) == null ? void 0 : _b.ownerDocument.removeEventListener(\"pointermove\", onPointerMove);\n        (_c = scope.domElement) == null ? void 0 : _c.ownerDocument.removeEventListener(\"pointerup\", onPointerUp);\n      }\n      scope.dispatchEvent(endEvent);\n      state = STATE.NONE;\n    }\n    function onMouseDown(event) {\n      let mouseAction;\n      switch (event.button) {\n        case 0:\n          mouseAction = scope.mouseButtons.LEFT;\n          break;\n        case 1:\n          mouseAction = scope.mouseButtons.MIDDLE;\n          break;\n        case 2:\n          mouseAction = scope.mouseButtons.RIGHT;\n          break;\n        default:\n          mouseAction = -1;\n      }\n      switch (mouseAction) {\n        case MOUSE.DOLLY:\n          if (scope.enableZoom === false) return;\n          handleMouseDownDolly(event);\n          state = STATE.DOLLY;\n          break;\n        case MOUSE.ROTATE:\n          if (event.ctrlKey || event.metaKey || event.shiftKey) {\n            if (scope.enablePan === false) return;\n            handleMouseDownPan(event);\n            state = STATE.PAN;\n          } else {\n            if (scope.enableRotate === false) return;\n            handleMouseDownRotate(event);\n            state = STATE.ROTATE;\n          }\n          break;\n        case MOUSE.PAN:\n          if (event.ctrlKey || event.metaKey || event.shiftKey) {\n            if (scope.enableRotate === false) return;\n            handleMouseDownRotate(event);\n            state = STATE.ROTATE;\n          } else {\n            if (scope.enablePan === false) return;\n            handleMouseDownPan(event);\n            state = STATE.PAN;\n          }\n          break;\n        default:\n          state = STATE.NONE;\n      }\n      if (state !== STATE.NONE) {\n        scope.dispatchEvent(startEvent);\n      }\n    }\n    function onMouseMove(event) {\n      if (scope.enabled === false) return;\n      switch (state) {\n        case STATE.ROTATE:\n          if (scope.enableRotate === false) return;\n          handleMouseMoveRotate(event);\n          break;\n        case STATE.DOLLY:\n          if (scope.enableZoom === false) return;\n          handleMouseMoveDolly(event);\n          break;\n        case STATE.PAN:\n          if (scope.enablePan === false) return;\n          handleMouseMovePan(event);\n          break;\n      }\n    }\n    function onMouseWheel(event) {\n      if (scope.enabled === false || scope.enableZoom === false || state !== STATE.NONE && state !== STATE.ROTATE) {\n        return;\n      }\n      event.preventDefault();\n      scope.dispatchEvent(startEvent);\n      handleMouseWheel(event);\n      scope.dispatchEvent(endEvent);\n    }\n    function onKeyDown(event) {\n      if (scope.enabled === false || scope.enablePan === false) return;\n      handleKeyDown(event);\n    }\n    function onTouchStart(event) {\n      trackPointer(event);\n      switch (pointers.length) {\n        case 1:\n          switch (scope.touches.ONE) {\n            case TOUCH.ROTATE:\n              if (scope.enableRotate === false) return;\n              handleTouchStartRotate();\n              state = STATE.TOUCH_ROTATE;\n              break;\n            case TOUCH.PAN:\n              if (scope.enablePan === false) return;\n              handleTouchStartPan();\n              state = STATE.TOUCH_PAN;\n              break;\n            default:\n              state = STATE.NONE;\n          }\n          break;\n        case 2:\n          switch (scope.touches.TWO) {\n            case TOUCH.DOLLY_PAN:\n              if (scope.enableZoom === false && scope.enablePan === false) return;\n              handleTouchStartDollyPan();\n              state = STATE.TOUCH_DOLLY_PAN;\n              break;\n            case TOUCH.DOLLY_ROTATE:\n              if (scope.enableZoom === false && scope.enableRotate === false) return;\n              handleTouchStartDollyRotate();\n              state = STATE.TOUCH_DOLLY_ROTATE;\n              break;\n            default:\n              state = STATE.NONE;\n          }\n          break;\n        default:\n          state = STATE.NONE;\n      }\n      if (state !== STATE.NONE) {\n        scope.dispatchEvent(startEvent);\n      }\n    }\n    function onTouchMove(event) {\n      trackPointer(event);\n      switch (state) {\n        case STATE.TOUCH_ROTATE:\n          if (scope.enableRotate === false) return;\n          handleTouchMoveRotate(event);\n          scope.update();\n          break;\n        case STATE.TOUCH_PAN:\n          if (scope.enablePan === false) return;\n          handleTouchMovePan(event);\n          scope.update();\n          break;\n        case STATE.TOUCH_DOLLY_PAN:\n          if (scope.enableZoom === false && scope.enablePan === false) return;\n          handleTouchMoveDollyPan(event);\n          scope.update();\n          break;\n        case STATE.TOUCH_DOLLY_ROTATE:\n          if (scope.enableZoom === false && scope.enableRotate === false) return;\n          handleTouchMoveDollyRotate(event);\n          scope.update();\n          break;\n        default:\n          state = STATE.NONE;\n      }\n    }\n    function onContextMenu(event) {\n      if (scope.enabled === false) return;\n      event.preventDefault();\n    }\n    function addPointer(event) {\n      pointers.push(event);\n    }\n    function removePointer(event) {\n      delete pointerPositions[event.pointerId];\n      for (let i = 0; i < pointers.length; i++) {\n        if (pointers[i].pointerId == event.pointerId) {\n          pointers.splice(i, 1);\n          return;\n        }\n      }\n    }\n    function trackPointer(event) {\n      let position = pointerPositions[event.pointerId];\n      if (position === void 0) {\n        position = new Vector2();\n        pointerPositions[event.pointerId] = position;\n      }\n      position.set(event.pageX, event.pageY);\n    }\n    function getSecondPointerPosition(event) {\n      const pointer = event.pointerId === pointers[0].pointerId ? pointers[1] : pointers[0];\n      return pointerPositions[pointer.pointerId];\n    }\n    this.dollyIn = (dollyScale = getZoomScale()) => {\n      dollyIn(dollyScale);\n      scope.update();\n    };\n    this.dollyOut = (dollyScale = getZoomScale()) => {\n      dollyOut(dollyScale);\n      scope.update();\n    };\n    this.getScale = () => {\n      return scale;\n    };\n    this.setScale = newScale => {\n      setScale(newScale);\n      scope.update();\n    };\n    this.getZoomScale = () => {\n      return getZoomScale();\n    };\n    if (domElement !== void 0) this.connect(domElement);\n    this.update();\n  }\n}\nclass MapControls extends OrbitControls {\n  constructor(object, domElement) {\n    super(object, domElement);\n    this.screenSpacePanning = false;\n    this.mouseButtons.LEFT = MOUSE.PAN;\n    this.mouseButtons.RIGHT = MOUSE.ROTATE;\n    this.touches.ONE = TOUCH.PAN;\n    this.touches.TWO = TOUCH.DOLLY_ROTATE;\n  }\n}\nexport { MapControls, OrbitControls };","map":{"version":3,"names":["__defProp","Object","defineProperty","__defNormalProp","obj","key","value","enumerable","configurable","writable","__publicField","Vector3","MOUSE","TOUCH","Quaternion","PerspectiveCamera","OrthographicCamera","Spherical","Vector2","Ray","Plane","EventDispatcher","_ray","_plane","TILT_LIMIT","Math","cos","PI","moduloWrapAround","offset","capacity","OrbitControls","constructor","object","domElement","Infinity","LEFT","UP","RIGHT","BOTTOM","ROTATE","MIDDLE","DOLLY","PAN","ONE","TWO","DOLLY_PAN","target0","target","clone","position0","position","zoom0","zoom","getPolarAngle","spherical","phi","getAzimuthalAngle","theta","setPolarAngle","currentPhi","phiDist","abs","sphericalDelta","scope","update","setAzimuthalAngle","currentTheta","thetaDist","getDistance","distanceTo","listenToKeyEvents","domElement2","addEventListener","onKeyDown","_domElementKeyEvents","stopListenToKeyEvents","removeEventListener","saveState","copy","reset","updateProjectionMatrix","dispatchEvent","changeEvent","state","STATE","NONE","up","quat","setFromUnitVectors","quatInverse","invert","lastPosition","lastQuaternion","twoPI","sub","applyQuaternion","setFromVector3","autoRotate","rotateLeft","getAutoRotationAngle","enableDamping","dampingFactor","min","minAzimuthAngle","max","maxAzimuthAngle","isFinite","minPolarAngle","maxPolarAngle","makeSafe","addScaledVector","panOffset","add","zoomToCursor","performCursorZoom","isOrthographicCamera","radius","clampDistance","scale","setFromSpherical","matrixAutoUpdate","updateMatrix","lookAt","multiplyScalar","set","zoomChanged","newRadius","isPerspectiveCamera","prevRadius","length","radiusDelta","dollyDirection","updateMatrixWorld","mouseBefore","mouse","x","y","unproject","minZoom","maxZoom","mouseAfter","console","warn","screenSpacePanning","transformDirection","matrix","origin","direction","dot","setFromNormalAndCoplanarPoint","intersectPlane","distanceToSquared","EPS","quaternion","connect","style","touchAction","onContextMenu","onPointerDown","onPointerUp","onMouseWheel","dispose","_a","_b","_c","_d","_e","_f","ownerDocument","onPointerMove","type","startEvent","endEvent","TOUCH_ROTATE","TOUCH_PAN","TOUCH_DOLLY_PAN","TOUCH_DOLLY_ROTATE","rotateStart","rotateEnd","rotateDelta","panStart","panEnd","panDelta","dollyStart","dollyEnd","dollyDelta","pointers","pointerPositions","autoRotateSpeed","getZoomScale","pow","zoomSpeed","angle","reverseOrbit","reverseHorizontalOrbit","rotateUp","reverseVerticalOrbit","panLeft","v","panLeft2","distance","objectMatrix","setFromMatrixColumn","panUp","panUp2","crossVectors","pan","pan2","deltaX","deltaY","element","targetDistance","tan","fov","clientHeight","right","left","clientWidth","top","bottom","enablePan","setScale","newScale","enableZoom","dollyOut","dollyScale","dollyIn","updateMouseParameters","event","rect","getBoundingClientRect","clientX","clientY","w","width","h","height","normalize","dist","minDistance","maxDistance","handleMouseDownRotate","handleMouseDownDolly","handleMouseDownPan","handleMouseMoveRotate","subVectors","rotateSpeed","handleMouseMoveDolly","handleMouseMovePan","panSpeed","handleMouseWheel","handleKeyDown","needsUpdate","code","keys","keyPanSpeed","preventDefault","handleTouchStartRotate","pageX","pageY","handleTouchStartPan","handleTouchStartDolly","dx","dy","sqrt","handleTouchStartDollyPan","handleTouchStartDollyRotate","enableRotate","handleTouchMoveRotate","getSecondPointerPosition","handleTouchMovePan","handleTouchMoveDolly","handleTouchMoveDollyPan","handleTouchMoveDollyRotate","enabled","addPointer","pointerType","onTouchStart","onMouseDown","onTouchMove","onMouseMove","removePointer","releasePointerCapture","pointerId","mouseAction","button","mouseButtons","ctrlKey","metaKey","shiftKey","trackPointer","touches","DOLLY_ROTATE","push","i","splice","pointer","getScale","MapControls"],"sources":["C:/Users/Marcelo/OneDrive/Documents/Desktop/e-traffic system/client/node_modules/three-stdlib/controls/OrbitControls.js"],"sourcesContent":["var __defProp = Object.defineProperty;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __publicField = (obj, key, value) => {\n  __defNormalProp(obj, typeof key !== \"symbol\" ? key + \"\" : key, value);\n  return value;\n};\nimport { Vector3, MOUSE, TOUCH, Quaternion, PerspectiveCamera, OrthographicCamera, Spherical, Vector2, Ray, Plane } from \"three\";\nimport { EventDispatcher } from \"./EventDispatcher.js\";\nconst _ray = /* @__PURE__ */ new Ray();\nconst _plane = /* @__PURE__ */ new Plane();\nconst TILT_LIMIT = Math.cos(70 * (Math.PI / 180));\nconst moduloWrapAround = (offset, capacity) => (offset % capacity + capacity) % capacity;\nclass OrbitControls extends EventDispatcher {\n  constructor(object, domElement) {\n    super();\n    __publicField(this, \"object\");\n    __publicField(this, \"domElement\");\n    // Set to false to disable this control\n    __publicField(this, \"enabled\", true);\n    // \"target\" sets the location of focus, where the object orbits around\n    __publicField(this, \"target\", new Vector3());\n    // How far you can dolly in and out ( PerspectiveCamera only )\n    __publicField(this, \"minDistance\", 0);\n    __publicField(this, \"maxDistance\", Infinity);\n    // How far you can zoom in and out ( OrthographicCamera only )\n    __publicField(this, \"minZoom\", 0);\n    __publicField(this, \"maxZoom\", Infinity);\n    // How far you can orbit vertically, upper and lower limits.\n    // Range is 0 to Math.PI radians.\n    __publicField(this, \"minPolarAngle\", 0);\n    // radians\n    __publicField(this, \"maxPolarAngle\", Math.PI);\n    // radians\n    // How far you can orbit horizontally, upper and lower limits.\n    // If set, the interval [ min, max ] must be a sub-interval of [ - 2 PI, 2 PI ], with ( max - min < 2 PI )\n    __publicField(this, \"minAzimuthAngle\", -Infinity);\n    // radians\n    __publicField(this, \"maxAzimuthAngle\", Infinity);\n    // radians\n    // Set to true to enable damping (inertia)\n    // If damping is enabled, you must call controls.update() in your animation loop\n    __publicField(this, \"enableDamping\", false);\n    __publicField(this, \"dampingFactor\", 0.05);\n    // This option actually enables dollying in and out; left as \"zoom\" for backwards compatibility.\n    // Set to false to disable zooming\n    __publicField(this, \"enableZoom\", true);\n    __publicField(this, \"zoomSpeed\", 1);\n    // Set to false to disable rotating\n    __publicField(this, \"enableRotate\", true);\n    __publicField(this, \"rotateSpeed\", 1);\n    // Set to false to disable panning\n    __publicField(this, \"enablePan\", true);\n    __publicField(this, \"panSpeed\", 1);\n    __publicField(this, \"screenSpacePanning\", true);\n    // if false, pan orthogonal to world-space direction camera.up\n    __publicField(this, \"keyPanSpeed\", 7);\n    // pixels moved per arrow key push\n    __publicField(this, \"zoomToCursor\", false);\n    // Set to true to automatically rotate around the target\n    // If auto-rotate is enabled, you must call controls.update() in your animation loop\n    __publicField(this, \"autoRotate\", false);\n    __publicField(this, \"autoRotateSpeed\", 2);\n    // 30 seconds per orbit when fps is 60\n    __publicField(this, \"reverseOrbit\", false);\n    // true if you want to reverse the orbit to mouse drag from left to right = orbits left\n    __publicField(this, \"reverseHorizontalOrbit\", false);\n    // true if you want to reverse the horizontal orbit direction\n    __publicField(this, \"reverseVerticalOrbit\", false);\n    // true if you want to reverse the vertical orbit direction\n    // The four arrow keys\n    __publicField(this, \"keys\", { LEFT: \"ArrowLeft\", UP: \"ArrowUp\", RIGHT: \"ArrowRight\", BOTTOM: \"ArrowDown\" });\n    // Mouse buttons\n    __publicField(this, \"mouseButtons\", {\n      LEFT: MOUSE.ROTATE,\n      MIDDLE: MOUSE.DOLLY,\n      RIGHT: MOUSE.PAN\n    });\n    // Touch fingers\n    __publicField(this, \"touches\", { ONE: TOUCH.ROTATE, TWO: TOUCH.DOLLY_PAN });\n    __publicField(this, \"target0\");\n    __publicField(this, \"position0\");\n    __publicField(this, \"zoom0\");\n    // the target DOM element for key events\n    __publicField(this, \"_domElementKeyEvents\", null);\n    __publicField(this, \"getPolarAngle\");\n    __publicField(this, \"getAzimuthalAngle\");\n    __publicField(this, \"setPolarAngle\");\n    __publicField(this, \"setAzimuthalAngle\");\n    __publicField(this, \"getDistance\");\n    // Not used in most scenarios, however they can be useful for specific use cases\n    __publicField(this, \"getZoomScale\");\n    __publicField(this, \"listenToKeyEvents\");\n    __publicField(this, \"stopListenToKeyEvents\");\n    __publicField(this, \"saveState\");\n    __publicField(this, \"reset\");\n    __publicField(this, \"update\");\n    __publicField(this, \"connect\");\n    __publicField(this, \"dispose\");\n    // Dolly in programmatically\n    __publicField(this, \"dollyIn\");\n    // Dolly out programmatically\n    __publicField(this, \"dollyOut\");\n    // Get the current scale\n    __publicField(this, \"getScale\");\n    // Set the current scale (these are not used in most scenarios, however they can be useful for specific use cases)\n    __publicField(this, \"setScale\");\n    this.object = object;\n    this.domElement = domElement;\n    this.target0 = this.target.clone();\n    this.position0 = this.object.position.clone();\n    this.zoom0 = this.object.zoom;\n    this.getPolarAngle = () => spherical.phi;\n    this.getAzimuthalAngle = () => spherical.theta;\n    this.setPolarAngle = (value) => {\n      let phi = moduloWrapAround(value, 2 * Math.PI);\n      let currentPhi = spherical.phi;\n      if (currentPhi < 0)\n        currentPhi += 2 * Math.PI;\n      if (phi < 0)\n        phi += 2 * Math.PI;\n      let phiDist = Math.abs(phi - currentPhi);\n      if (2 * Math.PI - phiDist < phiDist) {\n        if (phi < currentPhi) {\n          phi += 2 * Math.PI;\n        } else {\n          currentPhi += 2 * Math.PI;\n        }\n      }\n      sphericalDelta.phi = phi - currentPhi;\n      scope.update();\n    };\n    this.setAzimuthalAngle = (value) => {\n      let theta = moduloWrapAround(value, 2 * Math.PI);\n      let currentTheta = spherical.theta;\n      if (currentTheta < 0)\n        currentTheta += 2 * Math.PI;\n      if (theta < 0)\n        theta += 2 * Math.PI;\n      let thetaDist = Math.abs(theta - currentTheta);\n      if (2 * Math.PI - thetaDist < thetaDist) {\n        if (theta < currentTheta) {\n          theta += 2 * Math.PI;\n        } else {\n          currentTheta += 2 * Math.PI;\n        }\n      }\n      sphericalDelta.theta = theta - currentTheta;\n      scope.update();\n    };\n    this.getDistance = () => scope.object.position.distanceTo(scope.target);\n    this.listenToKeyEvents = (domElement2) => {\n      domElement2.addEventListener(\"keydown\", onKeyDown);\n      this._domElementKeyEvents = domElement2;\n    };\n    this.stopListenToKeyEvents = () => {\n      this._domElementKeyEvents.removeEventListener(\"keydown\", onKeyDown);\n      this._domElementKeyEvents = null;\n    };\n    this.saveState = () => {\n      scope.target0.copy(scope.target);\n      scope.position0.copy(scope.object.position);\n      scope.zoom0 = scope.object.zoom;\n    };\n    this.reset = () => {\n      scope.target.copy(scope.target0);\n      scope.object.position.copy(scope.position0);\n      scope.object.zoom = scope.zoom0;\n      scope.object.updateProjectionMatrix();\n      scope.dispatchEvent(changeEvent);\n      scope.update();\n      state = STATE.NONE;\n    };\n    this.update = (() => {\n      const offset = new Vector3();\n      const up = new Vector3(0, 1, 0);\n      const quat = new Quaternion().setFromUnitVectors(object.up, up);\n      const quatInverse = quat.clone().invert();\n      const lastPosition = new Vector3();\n      const lastQuaternion = new Quaternion();\n      const twoPI = 2 * Math.PI;\n      return function update() {\n        const position = scope.object.position;\n        quat.setFromUnitVectors(object.up, up);\n        quatInverse.copy(quat).invert();\n        offset.copy(position).sub(scope.target);\n        offset.applyQuaternion(quat);\n        spherical.setFromVector3(offset);\n        if (scope.autoRotate && state === STATE.NONE) {\n          rotateLeft(getAutoRotationAngle());\n        }\n        if (scope.enableDamping) {\n          spherical.theta += sphericalDelta.theta * scope.dampingFactor;\n          spherical.phi += sphericalDelta.phi * scope.dampingFactor;\n        } else {\n          spherical.theta += sphericalDelta.theta;\n          spherical.phi += sphericalDelta.phi;\n        }\n        let min = scope.minAzimuthAngle;\n        let max = scope.maxAzimuthAngle;\n        if (isFinite(min) && isFinite(max)) {\n          if (min < -Math.PI)\n            min += twoPI;\n          else if (min > Math.PI)\n            min -= twoPI;\n          if (max < -Math.PI)\n            max += twoPI;\n          else if (max > Math.PI)\n            max -= twoPI;\n          if (min <= max) {\n            spherical.theta = Math.max(min, Math.min(max, spherical.theta));\n          } else {\n            spherical.theta = spherical.theta > (min + max) / 2 ? Math.max(min, spherical.theta) : Math.min(max, spherical.theta);\n          }\n        }\n        spherical.phi = Math.max(scope.minPolarAngle, Math.min(scope.maxPolarAngle, spherical.phi));\n        spherical.makeSafe();\n        if (scope.enableDamping === true) {\n          scope.target.addScaledVector(panOffset, scope.dampingFactor);\n        } else {\n          scope.target.add(panOffset);\n        }\n        if (scope.zoomToCursor && performCursorZoom || scope.object.isOrthographicCamera) {\n          spherical.radius = clampDistance(spherical.radius);\n        } else {\n          spherical.radius = clampDistance(spherical.radius * scale);\n        }\n        offset.setFromSpherical(spherical);\n        offset.applyQuaternion(quatInverse);\n        position.copy(scope.target).add(offset);\n        if (!scope.object.matrixAutoUpdate)\n          scope.object.updateMatrix();\n        scope.object.lookAt(scope.target);\n        if (scope.enableDamping === true) {\n          sphericalDelta.theta *= 1 - scope.dampingFactor;\n          sphericalDelta.phi *= 1 - scope.dampingFactor;\n          panOffset.multiplyScalar(1 - scope.dampingFactor);\n        } else {\n          sphericalDelta.set(0, 0, 0);\n          panOffset.set(0, 0, 0);\n        }\n        let zoomChanged = false;\n        if (scope.zoomToCursor && performCursorZoom) {\n          let newRadius = null;\n          if (scope.object instanceof PerspectiveCamera && scope.object.isPerspectiveCamera) {\n            const prevRadius = offset.length();\n            newRadius = clampDistance(prevRadius * scale);\n            const radiusDelta = prevRadius - newRadius;\n            scope.object.position.addScaledVector(dollyDirection, radiusDelta);\n            scope.object.updateMatrixWorld();\n          } else if (scope.object.isOrthographicCamera) {\n            const mouseBefore = new Vector3(mouse.x, mouse.y, 0);\n            mouseBefore.unproject(scope.object);\n            scope.object.zoom = Math.max(scope.minZoom, Math.min(scope.maxZoom, scope.object.zoom / scale));\n            scope.object.updateProjectionMatrix();\n            zoomChanged = true;\n            const mouseAfter = new Vector3(mouse.x, mouse.y, 0);\n            mouseAfter.unproject(scope.object);\n            scope.object.position.sub(mouseAfter).add(mouseBefore);\n            scope.object.updateMatrixWorld();\n            newRadius = offset.length();\n          } else {\n            console.warn(\"WARNING: OrbitControls.js encountered an unknown camera type - zoom to cursor disabled.\");\n            scope.zoomToCursor = false;\n          }\n          if (newRadius !== null) {\n            if (scope.screenSpacePanning) {\n              scope.target.set(0, 0, -1).transformDirection(scope.object.matrix).multiplyScalar(newRadius).add(scope.object.position);\n            } else {\n              _ray.origin.copy(scope.object.position);\n              _ray.direction.set(0, 0, -1).transformDirection(scope.object.matrix);\n              if (Math.abs(scope.object.up.dot(_ray.direction)) < TILT_LIMIT) {\n                object.lookAt(scope.target);\n              } else {\n                _plane.setFromNormalAndCoplanarPoint(scope.object.up, scope.target);\n                _ray.intersectPlane(_plane, scope.target);\n              }\n            }\n          }\n        } else if (scope.object instanceof OrthographicCamera && scope.object.isOrthographicCamera) {\n          zoomChanged = scale !== 1;\n          if (zoomChanged) {\n            scope.object.zoom = Math.max(scope.minZoom, Math.min(scope.maxZoom, scope.object.zoom / scale));\n            scope.object.updateProjectionMatrix();\n          }\n        }\n        scale = 1;\n        performCursorZoom = false;\n        if (zoomChanged || lastPosition.distanceToSquared(scope.object.position) > EPS || 8 * (1 - lastQuaternion.dot(scope.object.quaternion)) > EPS) {\n          scope.dispatchEvent(changeEvent);\n          lastPosition.copy(scope.object.position);\n          lastQuaternion.copy(scope.object.quaternion);\n          zoomChanged = false;\n          return true;\n        }\n        return false;\n      };\n    })();\n    this.connect = (domElement2) => {\n      scope.domElement = domElement2;\n      scope.domElement.style.touchAction = \"none\";\n      scope.domElement.addEventListener(\"contextmenu\", onContextMenu);\n      scope.domElement.addEventListener(\"pointerdown\", onPointerDown);\n      scope.domElement.addEventListener(\"pointercancel\", onPointerUp);\n      scope.domElement.addEventListener(\"wheel\", onMouseWheel);\n    };\n    this.dispose = () => {\n      var _a, _b, _c, _d, _e, _f;\n      if (scope.domElement) {\n        scope.domElement.style.touchAction = \"auto\";\n      }\n      (_a = scope.domElement) == null ? void 0 : _a.removeEventListener(\"contextmenu\", onContextMenu);\n      (_b = scope.domElement) == null ? void 0 : _b.removeEventListener(\"pointerdown\", onPointerDown);\n      (_c = scope.domElement) == null ? void 0 : _c.removeEventListener(\"pointercancel\", onPointerUp);\n      (_d = scope.domElement) == null ? void 0 : _d.removeEventListener(\"wheel\", onMouseWheel);\n      (_e = scope.domElement) == null ? void 0 : _e.ownerDocument.removeEventListener(\"pointermove\", onPointerMove);\n      (_f = scope.domElement) == null ? void 0 : _f.ownerDocument.removeEventListener(\"pointerup\", onPointerUp);\n      if (scope._domElementKeyEvents !== null) {\n        scope._domElementKeyEvents.removeEventListener(\"keydown\", onKeyDown);\n      }\n    };\n    const scope = this;\n    const changeEvent = { type: \"change\" };\n    const startEvent = { type: \"start\" };\n    const endEvent = { type: \"end\" };\n    const STATE = {\n      NONE: -1,\n      ROTATE: 0,\n      DOLLY: 1,\n      PAN: 2,\n      TOUCH_ROTATE: 3,\n      TOUCH_PAN: 4,\n      TOUCH_DOLLY_PAN: 5,\n      TOUCH_DOLLY_ROTATE: 6\n    };\n    let state = STATE.NONE;\n    const EPS = 1e-6;\n    const spherical = new Spherical();\n    const sphericalDelta = new Spherical();\n    let scale = 1;\n    const panOffset = new Vector3();\n    const rotateStart = new Vector2();\n    const rotateEnd = new Vector2();\n    const rotateDelta = new Vector2();\n    const panStart = new Vector2();\n    const panEnd = new Vector2();\n    const panDelta = new Vector2();\n    const dollyStart = new Vector2();\n    const dollyEnd = new Vector2();\n    const dollyDelta = new Vector2();\n    const dollyDirection = new Vector3();\n    const mouse = new Vector2();\n    let performCursorZoom = false;\n    const pointers = [];\n    const pointerPositions = {};\n    function getAutoRotationAngle() {\n      return 2 * Math.PI / 60 / 60 * scope.autoRotateSpeed;\n    }\n    function getZoomScale() {\n      return Math.pow(0.95, scope.zoomSpeed);\n    }\n    function rotateLeft(angle) {\n      if (scope.reverseOrbit || scope.reverseHorizontalOrbit) {\n        sphericalDelta.theta += angle;\n      } else {\n        sphericalDelta.theta -= angle;\n      }\n    }\n    function rotateUp(angle) {\n      if (scope.reverseOrbit || scope.reverseVerticalOrbit) {\n        sphericalDelta.phi += angle;\n      } else {\n        sphericalDelta.phi -= angle;\n      }\n    }\n    const panLeft = (() => {\n      const v = new Vector3();\n      return function panLeft2(distance, objectMatrix) {\n        v.setFromMatrixColumn(objectMatrix, 0);\n        v.multiplyScalar(-distance);\n        panOffset.add(v);\n      };\n    })();\n    const panUp = (() => {\n      const v = new Vector3();\n      return function panUp2(distance, objectMatrix) {\n        if (scope.screenSpacePanning === true) {\n          v.setFromMatrixColumn(objectMatrix, 1);\n        } else {\n          v.setFromMatrixColumn(objectMatrix, 0);\n          v.crossVectors(scope.object.up, v);\n        }\n        v.multiplyScalar(distance);\n        panOffset.add(v);\n      };\n    })();\n    const pan = (() => {\n      const offset = new Vector3();\n      return function pan2(deltaX, deltaY) {\n        const element = scope.domElement;\n        if (element && scope.object instanceof PerspectiveCamera && scope.object.isPerspectiveCamera) {\n          const position = scope.object.position;\n          offset.copy(position).sub(scope.target);\n          let targetDistance = offset.length();\n          targetDistance *= Math.tan(scope.object.fov / 2 * Math.PI / 180);\n          panLeft(2 * deltaX * targetDistance / element.clientHeight, scope.object.matrix);\n          panUp(2 * deltaY * targetDistance / element.clientHeight, scope.object.matrix);\n        } else if (element && scope.object instanceof OrthographicCamera && scope.object.isOrthographicCamera) {\n          panLeft(\n            deltaX * (scope.object.right - scope.object.left) / scope.object.zoom / element.clientWidth,\n            scope.object.matrix\n          );\n          panUp(\n            deltaY * (scope.object.top - scope.object.bottom) / scope.object.zoom / element.clientHeight,\n            scope.object.matrix\n          );\n        } else {\n          console.warn(\"WARNING: OrbitControls.js encountered an unknown camera type - pan disabled.\");\n          scope.enablePan = false;\n        }\n      };\n    })();\n    function setScale(newScale) {\n      if (scope.object instanceof PerspectiveCamera && scope.object.isPerspectiveCamera || scope.object instanceof OrthographicCamera && scope.object.isOrthographicCamera) {\n        scale = newScale;\n      } else {\n        console.warn(\"WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.\");\n        scope.enableZoom = false;\n      }\n    }\n    function dollyOut(dollyScale) {\n      setScale(scale / dollyScale);\n    }\n    function dollyIn(dollyScale) {\n      setScale(scale * dollyScale);\n    }\n    function updateMouseParameters(event) {\n      if (!scope.zoomToCursor || !scope.domElement) {\n        return;\n      }\n      performCursorZoom = true;\n      const rect = scope.domElement.getBoundingClientRect();\n      const x = event.clientX - rect.left;\n      const y = event.clientY - rect.top;\n      const w = rect.width;\n      const h = rect.height;\n      mouse.x = x / w * 2 - 1;\n      mouse.y = -(y / h) * 2 + 1;\n      dollyDirection.set(mouse.x, mouse.y, 1).unproject(scope.object).sub(scope.object.position).normalize();\n    }\n    function clampDistance(dist) {\n      return Math.max(scope.minDistance, Math.min(scope.maxDistance, dist));\n    }\n    function handleMouseDownRotate(event) {\n      rotateStart.set(event.clientX, event.clientY);\n    }\n    function handleMouseDownDolly(event) {\n      updateMouseParameters(event);\n      dollyStart.set(event.clientX, event.clientY);\n    }\n    function handleMouseDownPan(event) {\n      panStart.set(event.clientX, event.clientY);\n    }\n    function handleMouseMoveRotate(event) {\n      rotateEnd.set(event.clientX, event.clientY);\n      rotateDelta.subVectors(rotateEnd, rotateStart).multiplyScalar(scope.rotateSpeed);\n      const element = scope.domElement;\n      if (element) {\n        rotateLeft(2 * Math.PI * rotateDelta.x / element.clientHeight);\n        rotateUp(2 * Math.PI * rotateDelta.y / element.clientHeight);\n      }\n      rotateStart.copy(rotateEnd);\n      scope.update();\n    }\n    function handleMouseMoveDolly(event) {\n      dollyEnd.set(event.clientX, event.clientY);\n      dollyDelta.subVectors(dollyEnd, dollyStart);\n      if (dollyDelta.y > 0) {\n        dollyOut(getZoomScale());\n      } else if (dollyDelta.y < 0) {\n        dollyIn(getZoomScale());\n      }\n      dollyStart.copy(dollyEnd);\n      scope.update();\n    }\n    function handleMouseMovePan(event) {\n      panEnd.set(event.clientX, event.clientY);\n      panDelta.subVectors(panEnd, panStart).multiplyScalar(scope.panSpeed);\n      pan(panDelta.x, panDelta.y);\n      panStart.copy(panEnd);\n      scope.update();\n    }\n    function handleMouseWheel(event) {\n      updateMouseParameters(event);\n      if (event.deltaY < 0) {\n        dollyIn(getZoomScale());\n      } else if (event.deltaY > 0) {\n        dollyOut(getZoomScale());\n      }\n      scope.update();\n    }\n    function handleKeyDown(event) {\n      let needsUpdate = false;\n      switch (event.code) {\n        case scope.keys.UP:\n          pan(0, scope.keyPanSpeed);\n          needsUpdate = true;\n          break;\n        case scope.keys.BOTTOM:\n          pan(0, -scope.keyPanSpeed);\n          needsUpdate = true;\n          break;\n        case scope.keys.LEFT:\n          pan(scope.keyPanSpeed, 0);\n          needsUpdate = true;\n          break;\n        case scope.keys.RIGHT:\n          pan(-scope.keyPanSpeed, 0);\n          needsUpdate = true;\n          break;\n      }\n      if (needsUpdate) {\n        event.preventDefault();\n        scope.update();\n      }\n    }\n    function handleTouchStartRotate() {\n      if (pointers.length == 1) {\n        rotateStart.set(pointers[0].pageX, pointers[0].pageY);\n      } else {\n        const x = 0.5 * (pointers[0].pageX + pointers[1].pageX);\n        const y = 0.5 * (pointers[0].pageY + pointers[1].pageY);\n        rotateStart.set(x, y);\n      }\n    }\n    function handleTouchStartPan() {\n      if (pointers.length == 1) {\n        panStart.set(pointers[0].pageX, pointers[0].pageY);\n      } else {\n        const x = 0.5 * (pointers[0].pageX + pointers[1].pageX);\n        const y = 0.5 * (pointers[0].pageY + pointers[1].pageY);\n        panStart.set(x, y);\n      }\n    }\n    function handleTouchStartDolly() {\n      const dx = pointers[0].pageX - pointers[1].pageX;\n      const dy = pointers[0].pageY - pointers[1].pageY;\n      const distance = Math.sqrt(dx * dx + dy * dy);\n      dollyStart.set(0, distance);\n    }\n    function handleTouchStartDollyPan() {\n      if (scope.enableZoom)\n        handleTouchStartDolly();\n      if (scope.enablePan)\n        handleTouchStartPan();\n    }\n    function handleTouchStartDollyRotate() {\n      if (scope.enableZoom)\n        handleTouchStartDolly();\n      if (scope.enableRotate)\n        handleTouchStartRotate();\n    }\n    function handleTouchMoveRotate(event) {\n      if (pointers.length == 1) {\n        rotateEnd.set(event.pageX, event.pageY);\n      } else {\n        const position = getSecondPointerPosition(event);\n        const x = 0.5 * (event.pageX + position.x);\n        const y = 0.5 * (event.pageY + position.y);\n        rotateEnd.set(x, y);\n      }\n      rotateDelta.subVectors(rotateEnd, rotateStart).multiplyScalar(scope.rotateSpeed);\n      const element = scope.domElement;\n      if (element) {\n        rotateLeft(2 * Math.PI * rotateDelta.x / element.clientHeight);\n        rotateUp(2 * Math.PI * rotateDelta.y / element.clientHeight);\n      }\n      rotateStart.copy(rotateEnd);\n    }\n    function handleTouchMovePan(event) {\n      if (pointers.length == 1) {\n        panEnd.set(event.pageX, event.pageY);\n      } else {\n        const position = getSecondPointerPosition(event);\n        const x = 0.5 * (event.pageX + position.x);\n        const y = 0.5 * (event.pageY + position.y);\n        panEnd.set(x, y);\n      }\n      panDelta.subVectors(panEnd, panStart).multiplyScalar(scope.panSpeed);\n      pan(panDelta.x, panDelta.y);\n      panStart.copy(panEnd);\n    }\n    function handleTouchMoveDolly(event) {\n      const position = getSecondPointerPosition(event);\n      const dx = event.pageX - position.x;\n      const dy = event.pageY - position.y;\n      const distance = Math.sqrt(dx * dx + dy * dy);\n      dollyEnd.set(0, distance);\n      dollyDelta.set(0, Math.pow(dollyEnd.y / dollyStart.y, scope.zoomSpeed));\n      dollyOut(dollyDelta.y);\n      dollyStart.copy(dollyEnd);\n    }\n    function handleTouchMoveDollyPan(event) {\n      if (scope.enableZoom)\n        handleTouchMoveDolly(event);\n      if (scope.enablePan)\n        handleTouchMovePan(event);\n    }\n    function handleTouchMoveDollyRotate(event) {\n      if (scope.enableZoom)\n        handleTouchMoveDolly(event);\n      if (scope.enableRotate)\n        handleTouchMoveRotate(event);\n    }\n    function onPointerDown(event) {\n      var _a, _b;\n      if (scope.enabled === false)\n        return;\n      if (pointers.length === 0) {\n        (_a = scope.domElement) == null ? void 0 : _a.ownerDocument.addEventListener(\"pointermove\", onPointerMove);\n        (_b = scope.domElement) == null ? void 0 : _b.ownerDocument.addEventListener(\"pointerup\", onPointerUp);\n      }\n      addPointer(event);\n      if (event.pointerType === \"touch\") {\n        onTouchStart(event);\n      } else {\n        onMouseDown(event);\n      }\n    }\n    function onPointerMove(event) {\n      if (scope.enabled === false)\n        return;\n      if (event.pointerType === \"touch\") {\n        onTouchMove(event);\n      } else {\n        onMouseMove(event);\n      }\n    }\n    function onPointerUp(event) {\n      var _a, _b, _c;\n      removePointer(event);\n      if (pointers.length === 0) {\n        (_a = scope.domElement) == null ? void 0 : _a.releasePointerCapture(event.pointerId);\n        (_b = scope.domElement) == null ? void 0 : _b.ownerDocument.removeEventListener(\"pointermove\", onPointerMove);\n        (_c = scope.domElement) == null ? void 0 : _c.ownerDocument.removeEventListener(\"pointerup\", onPointerUp);\n      }\n      scope.dispatchEvent(endEvent);\n      state = STATE.NONE;\n    }\n    function onMouseDown(event) {\n      let mouseAction;\n      switch (event.button) {\n        case 0:\n          mouseAction = scope.mouseButtons.LEFT;\n          break;\n        case 1:\n          mouseAction = scope.mouseButtons.MIDDLE;\n          break;\n        case 2:\n          mouseAction = scope.mouseButtons.RIGHT;\n          break;\n        default:\n          mouseAction = -1;\n      }\n      switch (mouseAction) {\n        case MOUSE.DOLLY:\n          if (scope.enableZoom === false)\n            return;\n          handleMouseDownDolly(event);\n          state = STATE.DOLLY;\n          break;\n        case MOUSE.ROTATE:\n          if (event.ctrlKey || event.metaKey || event.shiftKey) {\n            if (scope.enablePan === false)\n              return;\n            handleMouseDownPan(event);\n            state = STATE.PAN;\n          } else {\n            if (scope.enableRotate === false)\n              return;\n            handleMouseDownRotate(event);\n            state = STATE.ROTATE;\n          }\n          break;\n        case MOUSE.PAN:\n          if (event.ctrlKey || event.metaKey || event.shiftKey) {\n            if (scope.enableRotate === false)\n              return;\n            handleMouseDownRotate(event);\n            state = STATE.ROTATE;\n          } else {\n            if (scope.enablePan === false)\n              return;\n            handleMouseDownPan(event);\n            state = STATE.PAN;\n          }\n          break;\n        default:\n          state = STATE.NONE;\n      }\n      if (state !== STATE.NONE) {\n        scope.dispatchEvent(startEvent);\n      }\n    }\n    function onMouseMove(event) {\n      if (scope.enabled === false)\n        return;\n      switch (state) {\n        case STATE.ROTATE:\n          if (scope.enableRotate === false)\n            return;\n          handleMouseMoveRotate(event);\n          break;\n        case STATE.DOLLY:\n          if (scope.enableZoom === false)\n            return;\n          handleMouseMoveDolly(event);\n          break;\n        case STATE.PAN:\n          if (scope.enablePan === false)\n            return;\n          handleMouseMovePan(event);\n          break;\n      }\n    }\n    function onMouseWheel(event) {\n      if (scope.enabled === false || scope.enableZoom === false || state !== STATE.NONE && state !== STATE.ROTATE) {\n        return;\n      }\n      event.preventDefault();\n      scope.dispatchEvent(startEvent);\n      handleMouseWheel(event);\n      scope.dispatchEvent(endEvent);\n    }\n    function onKeyDown(event) {\n      if (scope.enabled === false || scope.enablePan === false)\n        return;\n      handleKeyDown(event);\n    }\n    function onTouchStart(event) {\n      trackPointer(event);\n      switch (pointers.length) {\n        case 1:\n          switch (scope.touches.ONE) {\n            case TOUCH.ROTATE:\n              if (scope.enableRotate === false)\n                return;\n              handleTouchStartRotate();\n              state = STATE.TOUCH_ROTATE;\n              break;\n            case TOUCH.PAN:\n              if (scope.enablePan === false)\n                return;\n              handleTouchStartPan();\n              state = STATE.TOUCH_PAN;\n              break;\n            default:\n              state = STATE.NONE;\n          }\n          break;\n        case 2:\n          switch (scope.touches.TWO) {\n            case TOUCH.DOLLY_PAN:\n              if (scope.enableZoom === false && scope.enablePan === false)\n                return;\n              handleTouchStartDollyPan();\n              state = STATE.TOUCH_DOLLY_PAN;\n              break;\n            case TOUCH.DOLLY_ROTATE:\n              if (scope.enableZoom === false && scope.enableRotate === false)\n                return;\n              handleTouchStartDollyRotate();\n              state = STATE.TOUCH_DOLLY_ROTATE;\n              break;\n            default:\n              state = STATE.NONE;\n          }\n          break;\n        default:\n          state = STATE.NONE;\n      }\n      if (state !== STATE.NONE) {\n        scope.dispatchEvent(startEvent);\n      }\n    }\n    function onTouchMove(event) {\n      trackPointer(event);\n      switch (state) {\n        case STATE.TOUCH_ROTATE:\n          if (scope.enableRotate === false)\n            return;\n          handleTouchMoveRotate(event);\n          scope.update();\n          break;\n        case STATE.TOUCH_PAN:\n          if (scope.enablePan === false)\n            return;\n          handleTouchMovePan(event);\n          scope.update();\n          break;\n        case STATE.TOUCH_DOLLY_PAN:\n          if (scope.enableZoom === false && scope.enablePan === false)\n            return;\n          handleTouchMoveDollyPan(event);\n          scope.update();\n          break;\n        case STATE.TOUCH_DOLLY_ROTATE:\n          if (scope.enableZoom === false && scope.enableRotate === false)\n            return;\n          handleTouchMoveDollyRotate(event);\n          scope.update();\n          break;\n        default:\n          state = STATE.NONE;\n      }\n    }\n    function onContextMenu(event) {\n      if (scope.enabled === false)\n        return;\n      event.preventDefault();\n    }\n    function addPointer(event) {\n      pointers.push(event);\n    }\n    function removePointer(event) {\n      delete pointerPositions[event.pointerId];\n      for (let i = 0; i < pointers.length; i++) {\n        if (pointers[i].pointerId == event.pointerId) {\n          pointers.splice(i, 1);\n          return;\n        }\n      }\n    }\n    function trackPointer(event) {\n      let position = pointerPositions[event.pointerId];\n      if (position === void 0) {\n        position = new Vector2();\n        pointerPositions[event.pointerId] = position;\n      }\n      position.set(event.pageX, event.pageY);\n    }\n    function getSecondPointerPosition(event) {\n      const pointer = event.pointerId === pointers[0].pointerId ? pointers[1] : pointers[0];\n      return pointerPositions[pointer.pointerId];\n    }\n    this.dollyIn = (dollyScale = getZoomScale()) => {\n      dollyIn(dollyScale);\n      scope.update();\n    };\n    this.dollyOut = (dollyScale = getZoomScale()) => {\n      dollyOut(dollyScale);\n      scope.update();\n    };\n    this.getScale = () => {\n      return scale;\n    };\n    this.setScale = (newScale) => {\n      setScale(newScale);\n      scope.update();\n    };\n    this.getZoomScale = () => {\n      return getZoomScale();\n    };\n    if (domElement !== void 0)\n      this.connect(domElement);\n    this.update();\n  }\n}\nclass MapControls extends OrbitControls {\n  constructor(object, domElement) {\n    super(object, domElement);\n    this.screenSpacePanning = false;\n    this.mouseButtons.LEFT = MOUSE.PAN;\n    this.mouseButtons.RIGHT = MOUSE.ROTATE;\n    this.touches.ONE = TOUCH.PAN;\n    this.touches.TWO = TOUCH.DOLLY_ROTATE;\n  }\n}\nexport {\n  MapControls,\n  OrbitControls\n};\n//# sourceMappingURL=OrbitControls.js.map\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}