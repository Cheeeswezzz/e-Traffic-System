{"ast":null,"code":"import React,{createContext,useContext,useState,useEffect}from'react';import{authAPI}from'../services/api';import{jsx as _jsx}from\"react/jsx-runtime\";const AuthContext=/*#__PURE__*/createContext();export const useAuth=()=>{const context=useContext(AuthContext);if(!context){throw new Error('useAuth must be used within an AuthProvider');}return context;};export const AuthProvider=_ref=>{let{children}=_ref;const[user,setUser]=useState(null);const[loading,setLoading]=useState(true);useEffect(()=>{checkAuth();},[]);const checkAuth=async()=>{try{const token=localStorage.getItem('token');if(token){const response=await authAPI.getCurrentUser();setUser(response.data.user);}}catch(error){console.error('Auth check failed:',error);// Clear token and user on any auth error\nlocalStorage.removeItem('token');setUser(null);// If it's a network error, show a warning\nif(error.code==='NETWORK_ERROR'||error.message==='Network Error'){console.warn('Backend API is not available. This is a frontend-only deployment.');}}finally{setLoading(false);}};const login=async(email,password)=>{try{const response=await authAPI.login(email,password);const{token,user}=response.data;localStorage.setItem('token',token);setUser(user);return{success:true};}catch(error){var _error$response,_error$response$data;return{success:false,error:((_error$response=error.response)===null||_error$response===void 0?void 0:(_error$response$data=_error$response.data)===null||_error$response$data===void 0?void 0:_error$response$data.error)||'Login failed'};}};const logout=async()=>{try{await authAPI.logout();}catch(error){console.error('Logout error:',error);}finally{localStorage.removeItem('token');setUser(null);}};const changePassword=async(currentPassword,newPassword)=>{try{await authAPI.changePassword(currentPassword,newPassword);return{success:true};}catch(error){var _error$response2,_error$response2$data;return{success:false,error:((_error$response2=error.response)===null||_error$response2===void 0?void 0:(_error$response2$data=_error$response2.data)===null||_error$response2$data===void 0?void 0:_error$response2$data.error)||'Password change failed'};}};const value={user,loading,login,logout,changePassword,checkAuth};return/*#__PURE__*/_jsx(AuthContext.Provider,{value:value,children:children});};","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","authAPI","jsx","_jsx","AuthContext","useAuth","context","Error","AuthProvider","_ref","children","user","setUser","loading","setLoading","checkAuth","token","localStorage","getItem","response","getCurrentUser","data","error","console","removeItem","code","message","warn","login","email","password","setItem","success","_error$response","_error$response$data","logout","changePassword","currentPassword","newPassword","_error$response2","_error$response2$data","value","Provider"],"sources":["C:/Users/Marcelo/OneDrive/Documents/Desktop/e-traffic system/client/src/contexts/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\r\nimport { authAPI } from '../services/api';\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport const useAuth = () => {\r\n  const context = useContext(AuthContext);\r\n  if (!context) {\r\n    throw new Error('useAuth must be used within an AuthProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [user, setUser] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    checkAuth();\r\n  }, []);\r\n\r\n  const checkAuth = async () => {\r\n    try {\r\n      const token = localStorage.getItem('token');\r\n      if (token) {\r\n        const response = await authAPI.getCurrentUser();\r\n        setUser(response.data.user);\r\n      }\r\n    } catch (error) {\r\n      console.error('Auth check failed:', error);\r\n      // Clear token and user on any auth error\r\n      localStorage.removeItem('token');\r\n      setUser(null);\r\n      \r\n      // If it's a network error, show a warning\r\n      if (error.code === 'NETWORK_ERROR' || error.message === 'Network Error') {\r\n        console.warn('Backend API is not available. This is a frontend-only deployment.');\r\n      }\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const login = async (email, password) => {\r\n    try {\r\n      const response = await authAPI.login(email, password);\r\n      const { token, user } = response.data;\r\n      \r\n      localStorage.setItem('token', token);\r\n      setUser(user);\r\n      \r\n      return { success: true };\r\n    } catch (error) {\r\n      return {\r\n        success: false,\r\n        error: error.response?.data?.error || 'Login failed'\r\n      };\r\n    }\r\n  };\r\n\r\n  const logout = async () => {\r\n    try {\r\n      await authAPI.logout();\r\n    } catch (error) {\r\n      console.error('Logout error:', error);\r\n    } finally {\r\n      localStorage.removeItem('token');\r\n      setUser(null);\r\n    }\r\n  };\r\n\r\n  const changePassword = async (currentPassword, newPassword) => {\r\n    try {\r\n      await authAPI.changePassword(currentPassword, newPassword);\r\n      return { success: true };\r\n    } catch (error) {\r\n      return {\r\n        success: false,\r\n        error: error.response?.data?.error || 'Password change failed'\r\n      };\r\n    }\r\n  };\r\n\r\n  const value = {\r\n    user,\r\n    loading,\r\n    login,\r\n    logout,\r\n    changePassword,\r\n    checkAuth\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}