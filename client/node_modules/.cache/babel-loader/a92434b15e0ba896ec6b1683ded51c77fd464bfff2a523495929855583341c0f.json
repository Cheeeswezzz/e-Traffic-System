{"ast":null,"code":"import { LineSegmentsGeometry } from \"./LineSegmentsGeometry.js\";\nclass LineGeometry extends LineSegmentsGeometry {\n  constructor() {\n    super();\n    this.isLineGeometry = true;\n    this.type = \"LineGeometry\";\n  }\n  setPositions(array) {\n    const length = array.length - 3;\n    const points = new Float32Array(2 * length);\n    for (let i = 0; i < length; i += 3) {\n      points[2 * i] = array[i];\n      points[2 * i + 1] = array[i + 1];\n      points[2 * i + 2] = array[i + 2];\n      points[2 * i + 3] = array[i + 3];\n      points[2 * i + 4] = array[i + 4];\n      points[2 * i + 5] = array[i + 5];\n    }\n    super.setPositions(points);\n    return this;\n  }\n  setColors(array, itemSize = 3) {\n    const length = array.length - itemSize;\n    const colors = new Float32Array(2 * length);\n    if (itemSize === 3) {\n      for (let i = 0; i < length; i += itemSize) {\n        colors[2 * i] = array[i];\n        colors[2 * i + 1] = array[i + 1];\n        colors[2 * i + 2] = array[i + 2];\n        colors[2 * i + 3] = array[i + 3];\n        colors[2 * i + 4] = array[i + 4];\n        colors[2 * i + 5] = array[i + 5];\n      }\n    } else {\n      for (let i = 0; i < length; i += itemSize) {\n        colors[2 * i] = array[i];\n        colors[2 * i + 1] = array[i + 1];\n        colors[2 * i + 2] = array[i + 2];\n        colors[2 * i + 3] = array[i + 3];\n        colors[2 * i + 4] = array[i + 4];\n        colors[2 * i + 5] = array[i + 5];\n        colors[2 * i + 6] = array[i + 6];\n        colors[2 * i + 7] = array[i + 7];\n      }\n    }\n    super.setColors(colors, itemSize);\n    return this;\n  }\n  fromLine(line) {\n    const geometry = line.geometry;\n    this.setPositions(geometry.attributes.position.array);\n    return this;\n  }\n}\nexport { LineGeometry };","map":{"version":3,"names":["LineSegmentsGeometry","LineGeometry","constructor","isLineGeometry","type","setPositions","array","length","points","Float32Array","i","setColors","itemSize","colors","fromLine","line","geometry","attributes","position"],"sources":["C:/Users/Marcelo/OneDrive/Documents/Desktop/e-traffic system/client/node_modules/three-stdlib/lines/LineGeometry.js"],"sourcesContent":["import { LineSegmentsGeometry } from \"./LineSegmentsGeometry.js\";\nclass LineGeometry extends LineSegmentsGeometry {\n  constructor() {\n    super();\n    this.isLineGeometry = true;\n    this.type = \"LineGeometry\";\n  }\n  setPositions(array) {\n    const length = array.length - 3;\n    const points = new Float32Array(2 * length);\n    for (let i = 0; i < length; i += 3) {\n      points[2 * i] = array[i];\n      points[2 * i + 1] = array[i + 1];\n      points[2 * i + 2] = array[i + 2];\n      points[2 * i + 3] = array[i + 3];\n      points[2 * i + 4] = array[i + 4];\n      points[2 * i + 5] = array[i + 5];\n    }\n    super.setPositions(points);\n    return this;\n  }\n  setColors(array, itemSize = 3) {\n    const length = array.length - itemSize;\n    const colors = new Float32Array(2 * length);\n    if (itemSize === 3) {\n      for (let i = 0; i < length; i += itemSize) {\n        colors[2 * i] = array[i];\n        colors[2 * i + 1] = array[i + 1];\n        colors[2 * i + 2] = array[i + 2];\n        colors[2 * i + 3] = array[i + 3];\n        colors[2 * i + 4] = array[i + 4];\n        colors[2 * i + 5] = array[i + 5];\n      }\n    } else {\n      for (let i = 0; i < length; i += itemSize) {\n        colors[2 * i] = array[i];\n        colors[2 * i + 1] = array[i + 1];\n        colors[2 * i + 2] = array[i + 2];\n        colors[2 * i + 3] = array[i + 3];\n        colors[2 * i + 4] = array[i + 4];\n        colors[2 * i + 5] = array[i + 5];\n        colors[2 * i + 6] = array[i + 6];\n        colors[2 * i + 7] = array[i + 7];\n      }\n    }\n    super.setColors(colors, itemSize);\n    return this;\n  }\n  fromLine(line) {\n    const geometry = line.geometry;\n    this.setPositions(geometry.attributes.position.array);\n    return this;\n  }\n}\nexport {\n  LineGeometry\n};\n//# sourceMappingURL=LineGeometry.js.map\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}