{"ast":null,"code":"import axios from 'axios';\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000/api';\n\n// Create axios instance\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Request interceptor to add auth token\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\n\n// Response interceptor to handle auth errors\napi.interceptors.response.use(response => response, error => {\n  var _error$response;\n  if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 401) {\n    localStorage.removeItem('token');\n    window.location.href = '/login';\n  }\n  return Promise.reject(error);\n});\n\n// Auth API\nexport const authAPI = {\n  login: (email, password) => api.post('/auth/login', {\n    email,\n    password\n  }),\n  logout: () => api.post('/auth/logout'),\n  getCurrentUser: () => api.get('/auth/me'),\n  changePassword: (currentPassword, newPassword) => api.put('/auth/change-password', {\n    currentPassword,\n    newPassword\n  })\n};\n\n// Admin API\nexport const adminAPI = {\n  getDashboard: () => api.get('/admin/dashboard'),\n  getEnforcers: params => api.get('/admin/enforcers', {\n    params\n  }),\n  createEnforcer: data => api.post('/admin/enforcers', data),\n  updateEnforcer: (id, data) => api.put(`/admin/enforcers/${id}`, data),\n  deleteEnforcer: id => api.delete(`/admin/enforcers/${id}`),\n  getSettings: () => api.get('/admin/settings'),\n  updateSettings: data => api.put('/admin/settings', data)\n};\n\n// Violations API\nexport const violationsAPI = {\n  getViolations: params => api.get('/violations', {\n    params\n  }),\n  getViolation: id => api.get(`/violations/${id}`),\n  createViolation: data => api.post('/violations', data),\n  updateViolation: (id, data) => api.put(`/violations/${id}`, data),\n  deleteViolation: id => api.delete(`/violations/${id}`),\n  getViolationStats: () => api.get('/violations/stats/overview'),\n  exportViolations: params => api.get('/violations/export', {\n    params,\n    responseType: params.format === 'csv' ? 'blob' : 'json'\n  })\n};\n\n// Enforcer API\nexport const enforcerAPI = {\n  getDashboard: () => api.get('/enforcer/dashboard'),\n  getProfile: () => api.get('/enforcer/profile'),\n  updateProfile: data => api.put('/enforcer/profile', data),\n  getViolations: params => api.get('/enforcer/violations', {\n    params\n  }),\n  getStats: () => api.get('/enforcer/stats')\n};\n\n// Reports API\nexport const reportsAPI = {\n  getViolationsReport: params => api.get('/reports/violations', {\n    params\n  }),\n  getEnforcersReport: params => api.get('/reports/enforcers', {\n    params\n  }),\n  getDailySummary: params => api.get('/reports/daily-summary', {\n    params\n  }),\n  getMonthlyReport: params => api.get('/reports/monthly', {\n    params\n  }),\n  testDatabase: () => api.get('/reports/test-db')\n};\n\n// SMS API\nexport const smsAPI = {\n  getLogs: params => api.get('/sms/logs', {\n    params\n  }),\n  getStats: () => api.get('/sms/stats'),\n  sendTest: data => api.post('/sms/test', data)\n};\nexport default api;","map":{"version":3,"names":["axios","API_BASE_URL","process","env","REACT_APP_API_URL","api","create","baseURL","headers","interceptors","request","use","config","token","localStorage","getItem","Authorization","error","Promise","reject","response","_error$response","status","removeItem","window","location","href","authAPI","login","email","password","post","logout","getCurrentUser","get","changePassword","currentPassword","newPassword","put","adminAPI","getDashboard","getEnforcers","params","createEnforcer","data","updateEnforcer","id","deleteEnforcer","delete","getSettings","updateSettings","violationsAPI","getViolations","getViolation","createViolation","updateViolation","deleteViolation","getViolationStats","exportViolations","responseType","format","enforcerAPI","getProfile","updateProfile","getStats","reportsAPI","getViolationsReport","getEnforcersReport","getDailySummary","getMonthlyReport","testDatabase","smsAPI","getLogs","sendTest"],"sources":["C:/Users/Marcelo/OneDrive/Documents/Desktop/e-traffic system/client/src/services/api.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000/api';\r\n\r\n// Create axios instance\r\nconst api = axios.create({\r\n  baseURL: API_BASE_URL,\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n  },\r\n});\r\n\r\n// Request interceptor to add auth token\r\napi.interceptors.request.use(\r\n  (config) => {\r\n    const token = localStorage.getItem('token');\r\n    if (token) {\r\n      config.headers.Authorization = `Bearer ${token}`;\r\n    }\r\n    return config;\r\n  },\r\n  (error) => {\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// Response interceptor to handle auth errors\r\napi.interceptors.response.use(\r\n  (response) => response,\r\n  (error) => {\r\n    if (error.response?.status === 401) {\r\n      localStorage.removeItem('token');\r\n      window.location.href = '/login';\r\n    }\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// Auth API\r\nexport const authAPI = {\r\n  login: (email, password) => api.post('/auth/login', { email, password }),\r\n  logout: () => api.post('/auth/logout'),\r\n  getCurrentUser: () => api.get('/auth/me'),\r\n  changePassword: (currentPassword, newPassword) =>\r\n    api.put('/auth/change-password', { currentPassword, newPassword }),\r\n};\r\n\r\n// Admin API\r\nexport const adminAPI = {\r\n  getDashboard: () => api.get('/admin/dashboard'),\r\n  getEnforcers: (params) => api.get('/admin/enforcers', { params }),\r\n  createEnforcer: (data) => api.post('/admin/enforcers', data),\r\n  updateEnforcer: (id, data) => api.put(`/admin/enforcers/${id}`, data),\r\n  deleteEnforcer: (id) => api.delete(`/admin/enforcers/${id}`),\r\n  getSettings: () => api.get('/admin/settings'),\r\n  updateSettings: (data) => api.put('/admin/settings', data),\r\n};\r\n\r\n// Violations API\r\nexport const violationsAPI = {\r\n  getViolations: (params) => api.get('/violations', { params }),\r\n  getViolation: (id) => api.get(`/violations/${id}`),\r\n  createViolation: (data) => api.post('/violations', data),\r\n  updateViolation: (id, data) => api.put(`/violations/${id}`, data),\r\n  deleteViolation: (id) => api.delete(`/violations/${id}`),\r\n  getViolationStats: () => api.get('/violations/stats/overview'),\r\n  exportViolations: (params) => api.get('/violations/export', { \r\n    params,\r\n    responseType: params.format === 'csv' ? 'blob' : 'json'\r\n  }),\r\n};\r\n\r\n// Enforcer API\r\nexport const enforcerAPI = {\r\n  getDashboard: () => api.get('/enforcer/dashboard'),\r\n  getProfile: () => api.get('/enforcer/profile'),\r\n  updateProfile: (data) => api.put('/enforcer/profile', data),\r\n  getViolations: (params) => api.get('/enforcer/violations', { params }),\r\n  getStats: () => api.get('/enforcer/stats'),\r\n};\r\n\r\n// Reports API\r\nexport const reportsAPI = {\r\n  getViolationsReport: (params) => api.get('/reports/violations', { params }),\r\n  getEnforcersReport: (params) => api.get('/reports/enforcers', { params }),\r\n  getDailySummary: (params) => api.get('/reports/daily-summary', { params }),\r\n  getMonthlyReport: (params) => api.get('/reports/monthly', { params }),\r\n  testDatabase: () => api.get('/reports/test-db'),\r\n};\r\n\r\n// SMS API\r\nexport const smsAPI = {\r\n  getLogs: (params) => api.get('/sms/logs', { params }),\r\n  getStats: () => api.get('/sms/stats'),\r\n  sendTest: (data) => api.post('/sms/test', data),\r\n};\r\n\r\nexport default api;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}